package model.base;

import java.io.Serializable;


/**
 * This class has been automatically generated by Hibernate Synchronizer.
 * For more information or documentation, visit The Hibernate Synchronizer page
 * at http://www.binamics.com/hibernatesync or contact Joe Hudson at joe@binamics.com.
 */
public class BaseMessagemailPK implements Serializable {

	private int hashCode = Integer.MIN_VALUE;

	private model.Responsable _idResponsable;
	private model.Laureat _idLaureat;

	public BaseMessagemailPK () {}
	
	public BaseMessagemailPK (
		model.Responsable _idResponsable,
		model.Laureat _idLaureat) {

		this.setIdResponsable(_idResponsable);
		this.setIdLaureat(_idLaureat);
	}


	public model.Responsable getIdResponsable () {
		return _idResponsable;
	}

	public void setIdResponsable (model.Responsable _idResponsable) {
		hashCode = Integer.MIN_VALUE;
		this._idResponsable = _idResponsable;
	}

	public model.Laureat getIdLaureat () {
		return _idLaureat;
	}

	public void setIdLaureat (model.Laureat _idLaureat) {
		hashCode = Integer.MIN_VALUE;
		this._idLaureat = _idLaureat;
	}

	public boolean equals (Object obj) {
		if (null == obj) return false;
		if (!(obj instanceof model.MessagemailPK)) return false;
		else {
			model.MessagemailPK mObj = (model.MessagemailPK) obj;
			if (null != this.getIdResponsable() && null != mObj.getIdResponsable()) {
				if (!this.getIdResponsable().equals(mObj.getIdResponsable())) {
					return false;
				}
			}
			else {
				return false;
			}
			if (null != this.getIdLaureat() && null != mObj.getIdLaureat()) {
				if (!this.getIdLaureat().equals(mObj.getIdLaureat())) {
					return false;
				}
			}
			else {
				return false;
			}
			return true;
		}
	}

	public int hashCode () {
		if (Integer.MIN_VALUE == this.hashCode) {
			StringBuffer sb = new StringBuffer();
			if (null != this.getIdResponsable()) {
				sb.append(this.getIdResponsable().hashCode());
				sb.append(":");
			}
			else {
				return super.hashCode();
			}
			if (null != this.getIdLaureat()) {
				sb.append(this.getIdLaureat().hashCode());
				sb.append(":");
			}
			else {
				return super.hashCode();
			}
			this.hashCode = sb.toString().hashCode();
		}
		return this.hashCode;
	}

}
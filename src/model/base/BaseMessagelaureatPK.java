package model.base;

import java.io.Serializable;


/**
 * This class has been automatically generated by Hibernate Synchronizer.
 * For more information or documentation, visit The Hibernate Synchronizer page
 * at http://www.binamics.com/hibernatesync or contact Joe Hudson at joe@binamics.com.
 */
public class BaseMessagelaureatPK implements Serializable {

	private int hashCode = Integer.MIN_VALUE;

	private model.Laureat _laureatrecepteur;
	private model.Laureat _laureatemetteur;

	public BaseMessagelaureatPK () {}
	
	public BaseMessagelaureatPK (
		model.Laureat _laureatrecepteur,
		model.Laureat _laureatemetteur) {

		this.setLaureatrecepteur(_laureatrecepteur);
		this.setLaureatemetteur(_laureatemetteur);
	}


	public model.Laureat getLaureatrecepteur () {
		return _laureatrecepteur;
	}

	public void setLaureatrecepteur (model.Laureat _laureatrecepteur) {
		hashCode = Integer.MIN_VALUE;
		this._laureatrecepteur = _laureatrecepteur;
	}

	public model.Laureat getLaureatemetteur () {
		return _laureatemetteur;
	}

	public void setLaureatemetteur (model.Laureat _laureatemetteur) {
		hashCode = Integer.MIN_VALUE;
		this._laureatemetteur = _laureatemetteur;
	}

	public boolean equals (Object obj) {
		if (null == obj) return false;
		if (!(obj instanceof model.MessagelaureatPK)) return false;
		else {
			model.MessagelaureatPK mObj = (model.MessagelaureatPK) obj;
			if (null != this.getLaureatrecepteur() && null != mObj.getLaureatrecepteur()) {
				if (!this.getLaureatrecepteur().equals(mObj.getLaureatrecepteur())) {
					return false;
				}
			}
			else {
				return false;
			}
			if (null != this.getLaureatemetteur() && null != mObj.getLaureatemetteur()) {
				if (!this.getLaureatemetteur().equals(mObj.getLaureatemetteur())) {
					return false;
				}
			}
			else {
				return false;
			}
			return true;
		}
	}

	public int hashCode () {
		if (Integer.MIN_VALUE == this.hashCode) {
			StringBuffer sb = new StringBuffer();
			if (null != this.getLaureatrecepteur()) {
				sb.append(this.getLaureatrecepteur().hashCode());
				sb.append(":");
			}
			else {
				return super.hashCode();
			}
			if (null != this.getLaureatemetteur()) {
				sb.append(this.getLaureatemetteur().hashCode());
				sb.append(":");
			}
			else {
				return super.hashCode();
			}
			this.hashCode = sb.toString().hashCode();
		}
		return this.hashCode;
	}

}
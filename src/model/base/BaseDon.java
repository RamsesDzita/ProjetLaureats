package model.base;

import java.io.Serializable;


/**
 * This class has been automatically generated by Hibernate Synchronizer.
 * For more information or documentation, visit The Hibernate Synchronizer page
 * at http://www.binamics.com/hibernatesync or contact Joe Hudson at joe@binamics.com.
 *
 * This is an object that contains data related to the don table.
 * Do not modify this class because it will be overwritten if the configuration file
 * related to this class is modified.
 *
 * @hibernate.class
 *  table="don"
 */
public abstract class BaseDon  implements Serializable {

	public static String PROP_ID_EVENEMENT_LAUREAT = "IdEvenementLaureat";
	public static String PROP_QUANTITE = "Quantite";
	public static String PROP_TYPE_DON = "TypeDon";
	public static String PROP_ID_DON = "IdDon";
	public static String PROP_IMAGE = "Image";


	private int hashCode = Integer.MIN_VALUE;

	// primary key
	private java.lang.Integer _idDon;

	// fields
	private java.lang.String _image;
	private java.lang.String _typeDon;
	private java.lang.Integer _quantite;

	// many to one
	private model.Evenementlaureat _idEvenementLaureat;


	// constructors
	public BaseDon () {
		initialize();
	}

	/**
	 * Constructor for primary key
	 */
	public BaseDon (java.lang.Integer _idDon) {
		this.setIdDon(_idDon);
		initialize();
	}

	/**
	 * Constructor for required fields
	 */
	public BaseDon (
		java.lang.Integer _idDon,
		model.Evenementlaureat _idEvenementLaureat,
		java.lang.String _image,
		java.lang.String _typeDon,
		java.lang.Integer _quantite) {

		this.setIdDon(_idDon);
		this.setIdEvenementLaureat(_idEvenementLaureat);
		this.setImage(_image);
		this.setTypeDon(_typeDon);
		this.setQuantite(_quantite);
		initialize();
	}

	protected void initialize () {}



	/**
	 * Return the unique identifier of this class
     * @hibernate.id
     *  generator-class="native"
     *  column="idDon"
     */
	public java.lang.Integer getIdDon () {
		return _idDon;
	}

	/**
	 * Set the unique identifier of this class
	 * @param _idDon the new ID
	 */
	public void setIdDon (java.lang.Integer _idDon) {
		this._idDon = _idDon;
		this.hashCode = Integer.MIN_VALUE;
	}


	/**
	 * Return the value associated with the column: image
	 */
	public java.lang.String getImage () {
		return _image;
	}

	/**
	 * Set the value related to the column: image
	 * @param _image the image value
	 */
	public void setImage (java.lang.String _image) {
		this._image = _image;
	}


	/**
	 * Return the value associated with the column: typeDon
	 */
	public java.lang.String getTypeDon () {
		return _typeDon;
	}

	/**
	 * Set the value related to the column: typeDon
	 * @param _typeDon the typeDon value
	 */
	public void setTypeDon (java.lang.String _typeDon) {
		this._typeDon = _typeDon;
	}


	/**
	 * Return the value associated with the column: quantite
	 */
	public java.lang.Integer getQuantite () {
		return _quantite;
	}

	/**
	 * Set the value related to the column: quantite
	 * @param _quantite the quantite value
	 */
	public void setQuantite (java.lang.Integer _quantite) {
		this._quantite = _quantite;
	}


	/**
     * @hibernate.property
     *  column=idEvenementLaureat
	 * not-null=true
	 */
	public model.Evenementlaureat getIdEvenementLaureat () {
		return this._idEvenementLaureat;
	}

	/**
	 * Set the value related to the column: idEvenementLaureat
	 * @param _idEvenementLaureat the idEvenementLaureat value
	 */
	public void setIdEvenementLaureat (model.Evenementlaureat _idEvenementLaureat) {
		this._idEvenementLaureat = _idEvenementLaureat;
	}


	public boolean equals (Object obj) {
		if (null == obj) return false;
		if (!(obj instanceof model.base.BaseDon)) return false;
		else {
			model.base.BaseDon mObj = (model.base.BaseDon) obj;
			if (null == this.getIdDon() || null == mObj.getIdDon()) return false;
			else return (this.getIdDon().equals(mObj.getIdDon()));
		}
	}


	public int hashCode () {
		if (Integer.MIN_VALUE == this.hashCode) {
			if (null == this.getIdDon()) return super.hashCode();
			else {
				String hashStr = this.getClass().getName() + ":" + this.getIdDon().hashCode();
				this.hashCode = hashStr.hashCode();
			}
		}
		return this.hashCode;
	}


	public String toString () {
		return super.toString();
	}

}